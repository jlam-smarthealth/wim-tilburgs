# üê≥ Docker Compose - wimtilburgs.nl AI Platform
# Microservices voor AI Health Platform
# Laatste update: 2025-08-23

version: '3.8'

services:
  # ü§ñ AI Services Container - GPT-5, Gemini, enz.
  ai-services:
    build:
      context: ./ai-services
      dockerfile: Dockerfile
    container_name: wimtilburgs-ai-services
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - DATABASE_URL=${DATABASE_URL}
      - AZURE_KEY_VAULT_URL=${AZURE_KEY_VAULT_URL}
    ports:
      - "8001:8000"
    volumes:
      - ai-logs:/app/logs
    networks:
      - wimtilburgs-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

  # üåê API Gateway - Routing, rate limiting, auth
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: wimtilburgs-api-gateway
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - RATE_LIMIT_REQUESTS=100
      - RATE_LIMIT_WINDOW=900000  # 15 minutes
    ports:
      - "8000:8000"
    depends_on:
      - ai-services
      - redis
    networks:
      - wimtilburgs-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # üìä Redis - Caching en session storage
  redis:
    image: redis:7-alpine
    container_name: wimtilburgs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - wimtilburgs-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # üìà Monitoring - Prometheus metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: wimtilburgs-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - wimtilburgs-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  # üìä Grafana - Monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: wimtilburgs-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_SERVER_DOMAIN=monitoring.wimtilburgs.nl
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - wimtilburgs-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # üîç Elasticsearch - Logging en search (voor toekomstige blog search)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
    container_name: wimtilburgs-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - wimtilburgs-network
    restart: unless-stopped

  # üìã Kibana - Log analysis dashboard
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.0
    container_name: wimtilburgs-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - wimtilburgs-network
    restart: unless-stopped

# üåê Networks
networks:
  wimtilburgs-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# üíæ Volumes
volumes:
  ai-logs:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  elasticsearch-data:
    driver: local